#!/usr/bin/env python3

import sys,os

FILE = """
\xB4\xE0 
    
    
"""



OFFSET = "\x7c\x40"


vars = {
    "default" : "\x68\x65\x6C\x6C\x6F"
}
vardata = ""
defs = {
    "print" : "\xB0{0}\xCD\x10"
}

def hexify(string):
    return " ".join([hex(ord(c))[2:] for c in string])

def lineify(scope):
    scope = scope.replace("\n","")
    scope = scope.replace("\r","")
    lines = scope.split(";")
    lines.remove("")
    return lines


def varify(val,name):
         

def parse(line):
    for word in line.split(" "):
        if word[0] == "$":
            # variable assigement
            asign = word[1:].split("=")
            var = asign[0]
            val = asign[1]
            vars[var] = val
        elif word in defs:
            # function call
            call = word
            args = line.split("(")[1].split(")")[0].split(",")
            for arg in args:
                if arg in vars:
                    arg = vars[arg]
                elif "\"" in arg or "\'" in arg:
                    arg = arg.replace("\"","")
                    arg = arg.replace("\'","")
                    arg =  hexify(arg)

            return defs[call].format(*args)




if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: ce <file>")
        sys.exit(1)
    else:
        path = sys.argv[1]
        if not os.path.exists(path):
            print("File not found: " + path)
            sys.exit(1)
    
    with open(path, "r") as f:
        code = f.read()
        f.close()
    
    # Here we need to scopify the code
    scope = code
    lines = lineify(scope)
    for line in lines:
        parse(line)

